Basic Authentication 
- 사용자 이름 / 비밀번호를 Base64로 인코딩하여 Authorization 헤더에 포함하여 전송됨. 
- 매우 안전하지 않음, SSL/TLS와 함께 사용됨. 

Authorization : Basic ~~~~(인코딩 된 내용들)
--------------------------------------------------------------------------------

Bearer Token Authentication(여기서는 우리가 사용할 것. )
- 헤더에 토큰을 포함하여 전송. Authorization 헤더에 포함하여 전송
- JWT 를 사용하여 인증 
- 간단한 방식, 상태를 유지하지 않음, 확장성이 높음 
- 토큰 노출 위험, 토큰 관리가 귀찮음. 

Authorization: Bearer ~~~~(인코딩 된 내용들)
--------------------------------------------------------------------------------

OAuth 
- 토큰 기반 인증 방식, 사용자가 직접 자격을 증명하지 않고 미리 인증을 받아서 토큰을 발급받음.
- 그리고 이 토큰을 이용하여 API를 요청하는 방식. 현재 버전은 OAuth 2.0. 

ex) Kakao / Naver / Git / Facebook 로그인에 이용 

API key / Session Based Authentication
---------------------------------------------------------------------------------
JWT (Json Web Token): 클레임이라고 불리는 정보를 JSON 형태로 안전하게 전송하기 위한 토큰 기반의 표준 
- 인증과 정보 교환에 사용, 서명이 되어 있어서 신뢰성을 확보할 수 있음. 

1. Header : 토큰의 타입과 사용된 알고리즘 정보를 담고 있음, Base64URL로 인코딩 
2. Payload : 클레임 정보, 대상, 발행자, 만료 시간 등 다양한 정보가 포함됨, Base64URL로 인코딩 
3. Signature : Header와 Payload, Secret key를 사용하여 생성된 서명 